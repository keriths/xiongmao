<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xm.service.dao.cim.DwsProductOcYieldFidsDAO" >

    <sql id="inline">
          ((
            (
              sum(ABI_OUTPUT_PA)+
              sum(MBI_OUTPUT_PA)+
              sum(ABI_OUTPUT_JUDGE29)+
              sum(MBI_OUTPUT_JUDGE29)-
              sum(OEI_OUTPUT_JUDGE37)
            )
            /
            (
              (
                sum(ABI_OUTPUT_PA)+
                sum(MBI_OUTPUT)
              )
            )
            +
            (
              sum(MBI_OUTPUT_PD)+
              sum(OEI_OUTPUT_JUDGE37)
            )
            /
            (
              sum(ABI_OUTPUT_PA)+
              sum(MBI_OUTPUT)
            )
            +
              sum(nvl(ACTUAL_REPAIR_YIELD_D,0))
          )
          *
          (
            (
              sum(OEI_OUTPUT_S)+
              sum(OEI_OUTPUT_A)+
              sum(OEI_OUTPUT_FA)+
              sum(OEI_OUTPUT_JUDGE20)+
              sum(OEI_OUTPUT_JUDGE21)+
              sum(OEI_OUTPUT_JUDGE22)+
              sum(OEI_OUTPUT_JUDGE23)+
              sum(OEI_OUTPUT_JUDGE25)+
              sum(OEI_OUTPUT_JUDGE28)+
              sum(OEI_OUTPUT_JUDGE29)+
              sum(OEI_OUTPUT_JUDGE37)+
              sum(OEI_OUTPUT_JUDGE39)
            )/sum(OEI_OUTPUT)
            +
            (
              sum(OEI_OUTPUT_B)+
              sum(OEI_OUTPUT_D)+
              sum(OEI_OUTPUT_AM)-
              sum(OEI_OUTPUT_JUDGE37)-
              sum(OEI_OUTPUT_JUDGE39)
            )/sum(OEI_OUTPUT)
            +
            sum(nvl(ACTUAL_REPAIR_YIELD_D,0))
          ))*100
    </sql>

    <select id="queryProductOcData" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductOcDetailData" parameterType="Map">
        select
        <include refid="inline"/> as inLine,
        <if test="dateType=='month'.toString()">/*按月*/
            TO_CHAR(PERIODDATE,'MM')||'月'
        </if>
        <if test="dateType=='quarter'.toString()">/*按季度*/
            TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度'
        </if>
        <if test="dateType=='day'.toString()">/*按天*/
            TO_CHAR(PERIODDATE,'mm/dd')
        </if>
        as periodDate
        from DWS_PRODUCT_OC_YIELD_FIDS
        WHERE
        <![CDATA[
            PERIODDATE >= #{beginDate}
            and PERIODDATE <= #{endDate}
        ]]>
        and PRODUCTID in
        <foreach collection="productIdList" item="productId" open="(" separator="," close=")">
            #{productId}
        </foreach>
        and PRODUCTTYPE NOT IN ('DM')
        GROUP BY
        <if test="dateType=='month'.toString()">/*按月*/
            TO_CHAR(PERIODDATE,'MM')||'月'
        </if>
        <if test="dateType=='quarter'.toString()">
            TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度'
        </if>
        <if test="dateType=='day'.toString()">
            TO_CHAR(PERIODDATE,'mm/dd')
        </if>

    </select>



    <select id="queryTotalProductLineOCByDateAndProductList" parameterType="map" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductOcDetailData">
        SELECT
        decode(PRODUCTID,'C41A','50', 'D41A','50','A1CC495PU1L01','50','D0NL495PU1L01','50',
        'C51A','58','D51A','58','A1CC575PU1L01','58','A1CC575PU3L01','58',PRODUCTID) as productName,
        <include refid="inline"/> as inLine
        FROM
        DWS_PRODUCT_OC_YIELD_FIDS
        WHERE
        PRODUCTID IN ('C41A', 'D41A','A1CC495PU1L01','D0NL495PU1L01', 'C51A','D51A','A1CC575PU1L01','A1CC575PU3L01')
        and PRODUCTTYPE NOT IN ('DM')
        <![CDATA[
          and PERIODDATE >= #{startDate}
          and PERIODDATE <= #{endDate}
        ]]>
        GROUP BY decode(PRODUCTID,'C41A','50', 'D41A','50','A1CC495PU1L01','50','D0NL495PU1L01','50',
        'C51A','58','D51A','58','A1CC575PU1L01','58','A1CC575PU3L01','58',PRODUCTID)
    </select>



    <select id="loadByPrimaryKey" parameterType="map" resultType="map">
        SELECT * from DWS_PRODUCT_OC_YIELD_FIDS
        where
        FACTORY = #{FACTORY,jdbcType=VARCHAR} and
        PERIODDATE = #{PERIODDATE,jdbcType=DATE} and
        PRODUCTID = #{PRODUCTID,jdbcType=VARCHAR} and
        <if test="PRODUCTTYPE != null">
            PRODUCTTYPE = #{PRODUCTTYPE,jdbcType=VARCHAR}
        </if>
        <if test="PRODUCTTYPE == null">
            PRODUCTTYPE is null
        </if>
    </select>


    <insert id="addData" parameterType="map">
        INSERT INTO  DWS_PRODUCT_OC_YIELD_FIDS
        (
            FACTORY,
            PERIODDATE,
            PRODUCTTYPE,
            PRODUCTID,

            ABI_OUTPUT_PA,
            ABI_OUTPUT_JUDGE29,
            MBI_OUTPUT_PA,
            MBI_OUTPUT_JUDGE29,
            MBI_OUTPUT,
            MBI_OUTPUT_PD,
            OEI_OUTPUT,
            OEI_OUTPUT_S,
            OEI_OUTPUT_A,
            OEI_OUTPUT_FA,
            OEI_OUTPUT_JUDGE20,
            OEI_OUTPUT_JUDGE21,
            OEI_OUTPUT_JUDGE22,
            OEI_OUTPUT_JUDGE23,
            OEI_OUTPUT_JUDGE25,
            OEI_OUTPUT_JUDGE28,
            OEI_OUTPUT_JUDGE29,
            OEI_OUTPUT_JUDGE37,
            OEI_OUTPUT_JUDGE39,
            OEI_OUTPUT_B,
            OEI_OUTPUT_D,
            OEI_OUTPUT_AM,
            ACTUAL_REPAIR_YIELD_D
        ) VALUES
        (
            #{FACTORY,jdbcType=VARCHAR},
            #{PERIODDATE,jdbcType=DATE},
            #{PRODUCTTYPE,jdbcType=VARCHAR},
            #{PRODUCTID,jdbcType=VARCHAR},

            #{ABI_OUTPUT_PA,jdbcType=DOUBLE},
            #{ABI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
            #{MBI_OUTPUT_PA,jdbcType=DOUBLE},
            #{MBI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
            #{MBI_OUTPUT,jdbcType=DOUBLE},
            #{MBI_OUTPUT_PD,jdbcType=DOUBLE},
            #{OEI_OUTPUT,jdbcType=DOUBLE},
            #{OEI_OUTPUT_S,jdbcType=DOUBLE},
            #{OEI_OUTPUT_A,jdbcType=DOUBLE},
            #{OEI_OUTPUT_FA,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE20,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE21,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE22,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE23,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE25,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE28,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE37,jdbcType=DOUBLE},
            #{OEI_OUTPUT_JUDGE39,jdbcType=DOUBLE},
            #{OEI_OUTPUT_B,jdbcType=DOUBLE},
            #{OEI_OUTPUT_D,jdbcType=DOUBLE},
            #{OEI_OUTPUT_AM,jdbcType=DOUBLE},
            #{ACTUAL_REPAIR_YIELD_D,jdbcType=DOUBLE}
        )
    </insert>

    <update id="updateData" parameterType="map">
        UPDATE DWS_PRODUCT_OC_YIELD_FIDS set
        ABI_OUTPUT_PA=#{ABI_OUTPUT_PA,jdbcType=DOUBLE},
        ABI_OUTPUT_JUDGE29=#{ABI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
        MBI_OUTPUT_PA=#{MBI_OUTPUT_PA,jdbcType=DOUBLE},
        MBI_OUTPUT_JUDGE29=#{MBI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
        MBI_OUTPUT=#{MBI_OUTPUT,jdbcType=DOUBLE},
        MBI_OUTPUT_PD=#{MBI_OUTPUT_PD,jdbcType=DOUBLE},
        OEI_OUTPUT=#{OEI_OUTPUT,jdbcType=DOUBLE},
        OEI_OUTPUT_S=#{OEI_OUTPUT_S,jdbcType=DOUBLE},
        OEI_OUTPUT_A=#{OEI_OUTPUT_A,jdbcType=DOUBLE},
        OEI_OUTPUT_FA=#{OEI_OUTPUT_FA,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE20=#{OEI_OUTPUT_JUDGE20,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE21=#{OEI_OUTPUT_JUDGE21,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE22=#{OEI_OUTPUT_JUDGE22,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE23=#{OEI_OUTPUT_JUDGE23,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE25=#{OEI_OUTPUT_JUDGE25,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE28=#{OEI_OUTPUT_JUDGE28,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE29=#{OEI_OUTPUT_JUDGE29,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE37=#{OEI_OUTPUT_JUDGE37,jdbcType=DOUBLE},
        OEI_OUTPUT_JUDGE39=#{OEI_OUTPUT_JUDGE39,jdbcType=DOUBLE},
        OEI_OUTPUT_B=#{OEI_OUTPUT_B,jdbcType=DOUBLE},
        OEI_OUTPUT_D=#{OEI_OUTPUT_D,jdbcType=DOUBLE},
        OEI_OUTPUT_AM=#{OEI_OUTPUT_AM,jdbcType=DOUBLE},
        ACTUAL_REPAIR_YIELD_D=#{ACTUAL_REPAIR_YIELD_D,jdbcType=DOUBLE}
        WHERE
            FACTORY = #{FACTORY,jdbcType=VARCHAR} and
            PERIODDATE = #{PERIODDATE,jdbcType=DATE} and
            PRODUCTID = #{PRODUCTID,jdbcType=VARCHAR} and
            <if test="PRODUCTTYPE != null">
                PRODUCTTYPE = #{PRODUCTTYPE,jdbcType=VARCHAR}
            </if>
            <if test="PRODUCTTYPE == null">
                PRODUCTTYPE is null
            </if>
    </update>
</mapper>