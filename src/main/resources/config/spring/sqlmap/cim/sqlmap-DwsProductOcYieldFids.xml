<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xm.service.dao.cim.DwsProductOcYieldFidsDAO" >

    <select id="queryProductOcData" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductOcData$ProductOcDetailData" parameterType="Map">
        select
        PRODUCTID as productName,
        sum(POL_INPUT) as polInput,
        sum(POL_OUTPUT_A) as polOutputA,
        sum(POL_OUTPUT_FA) as polOutputFA,
        sum(MBI_RJ_OUTPUT_A) as mbiRjOutputA,
        sum(MBI_RJ_OUTPUT_FA) as mbiRjOutputFA,
        sum(POL_RW_OUTPUT_A) as polRwOutputA,
        sum(POL_RW_OUTPUT_FA) as polRwOutputFA,
        sum(IOB_INPUT) as iobInput,
        sum(IOB_EI_OUTPUT_A) as iobEiOutputA,
        sum(IOB_EI_OUTPUT_FA) as iobEiOutputFA,
        sum(IOB_EI_OUTPUT_B_RW_A) as iobEiOutputBRwA,
        sum(IOB_EI_OUTPUT_B_RW_FA) as iobEiOutputBRwFA,
        sum(IOB_EI_OUTPUT_D_RW_A) as iobEiOutputDRwA,
        sum(IOB_EI_OUTPUT_D_RW_FA) as iobEiOutputDRwFA,
        <if test="dateType=='month'.toString()">/*按月*/
            TO_CHAR(PERIODDATE,'MM')||'月'
        </if>
        <if test="dateType=='quarter'.toString()">/*按季度*/
            TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度'
        </if>
        <if test="dateType=='day'.toString()">/*按天*/
            TO_CHAR(PERIODDATE,'mm/dd')
        </if>
        as periodDate
        from DWS_PRODUCT_OC_YIELD_FIDS
        WHERE
        <![CDATA[
            PERIODDATE >= #{beginDate}
            and PERIODDATE <= #{endDate}
        ]]>
        AND PRODUCTID=#{productName,jdbcType=VARCHAR}
        and PRODUCTTYPE IN
        <foreach collection="productTypeList" item="productType" open="(" separator="," close=")">
            #{productType}
        </foreach>
        GROUP BY
        <if test="dateType=='month'.toString()">/*按月*/
            TO_CHAR(PERIODDATE,'MM')||'月',
        </if>
        <if test="dateType=='quarter'.toString()">
            TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度',
        </if>
        <if test="dateType=='day'.toString()">
            TO_CHAR(PERIODDATE,'mm/dd'),
        </if>
        PRODUCTID
    </select>

    <select id="loadByPrimaryKey" parameterType="map" resultType="map">
        SELECT * from DWS_PRODUCT_OC_YIELD_FIDS
        where FACTORY = #{FACTORY} and
        PERIODDATE = #{PERIODDATE} and
        PRODUCTID = #{PRODUCTID} and
        PRODUCTTYPE = #{PRODUCTTYPE}
    </select>
    <insert id="addData" parameterType="map">
        INSERT INTO  DWS_PRODUCT_OC_YIELD_FIDS
        (FACTORY,   PERIODDATE,   PRODUCTID,   POL_INPUT,   POL_OUTPUT_A,   POL_OUTPUT_FA,   MBI_RJ_OUTPUT_A,   MBI_RJ_OUTPUT_FA,   POL_RW_OUTPUT_A,   POL_RW_OUTPUT_FA,
                    IOB_INPUT,IOB_EI_OUTPUT_A,   IOB_EI_OUTPUT_FA,   IOB_EI_OUTPUT_B_RW_A,   IOB_EI_OUTPUT_B_RW_FA,   IOB_EI_OUTPUT_D_RW_A,   IOB_EI_OUTPUT_D_RW_FA,   INTERFACE_TIME,   PRODUCTTYPE) VALUES
        (#{FACTORY},#{PERIODDATE},#{PRODUCTID},#{POL_INPUT},#{POL_OUTPUT_A},#{POL_OUTPUT_FA},#{MBI_RJ_OUTPUT_A},#{MBI_RJ_OUTPUT_FA},#{POL_RW_OUTPUT_A},#{POL_RW_OUTPUT_FA},
                    #{IOB_INPUT},#{IOB_EI_OUTPUT_A},#{IOB_EI_OUTPUT_FA},#{IOB_EI_OUTPUT_B_RW_A},#{IOB_EI_OUTPUT_B_RW_FA},#{IOB_EI_OUTPUT_D_RW_A},#{IOB_EI_OUTPUT_D_RW_FA},sysdate,#{PRODUCTTYPE})
    </insert>
    <update id="updateData" parameterType="map">
        UPDATE DWS_PRODUCT_OC_YIELD_FIDS SET
        POL_INPUT = #{POL_INPUT} ,
        POL_OUTPUT_A = #{POL_OUTPUT_A} ,
        POL_OUTPUT_FA = #{POL_OUTPUT_FA},
        MBI_RJ_OUTPUT_A = #{MBI_RJ_OUTPUT_A} ,
        MBI_RJ_OUTPUT_FA = #{MBI_RJ_OUTPUT_FA} ,
        POL_RW_OUTPUT_A = #{POL_RW_OUTPUT_A} ,
        POL_RW_OUTPUT_FA = #{POL_RW_OUTPUT_FA} ,
        IOB_INPUT = #{IOB_INPUT} ,
        IOB_EI_OUTPUT_A = #{IOB_EI_OUTPUT_A} ,
        IOB_EI_OUTPUT_FA = #{IOB_EI_OUTPUT_FA} ,
        IOB_EI_OUTPUT_B_RW_A = #{IOB_EI_OUTPUT_B_RW_A} ,
        IOB_EI_OUTPUT_B_RW_FA = #{IOB_EI_OUTPUT_B_RW_FA} ,
        IOB_EI_OUTPUT_D_RW_A = #{IOB_EI_OUTPUT_D_RW_A} ,
        IOB_EI_OUTPUT_D_RW_FA = #{IOB_EI_OUTPUT_D_RW_FA} ,
        INTERFACE_TIME = sysdate
        WHERE
        FACTORY = #{FACTORY} and
        PERIODDATE = #{PERIODDATE} and
        PRODUCTID = #{PRODUCTID} and
        PRODUCTTYPE = #{PRODUCTTYPE}
    </update>

    <update id="updateTargetData" parameterType="map">
        UPDATE DWS_PRODUCT_OC_YIELD_FIDS SET
        (DWS_PRODUCT_OC_YIELD_FIDS.TARGETINLINE)=
        (select TARGETINLINE
        from TARGETOC
        where
        TARGETOC.PRODUCTID=DWS_PRODUCT_OC_YIELD_FIDS.PRODUCTID)
    </update>

    <select id="queryTotalProductLineOCByDateAndProductList" parameterType="map" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductOcData$ProductOcDetailData">
        SELECT
        decode(PRODUCTID,'C41A','50', 'D41A','50','A1CC495PU1L01','50','D0NL495PU1L01','50',
        'C51A','58','D51A','58','A1CC575PU1L01','58','A1CC575PU3L01','58',PRODUCTID) as productName,
        sum(POL_INPUT) as polInput,
        sum(POL_OUTPUT_A) as polOutputA,
        sum(POL_OUTPUT_FA) as polOutputFA,
        sum(MBI_RJ_OUTPUT_A) as mbiRjOutputA,
        sum(MBI_RJ_OUTPUT_FA) as mbiRjOutputFA,
        sum(POL_RW_OUTPUT_A) as polRwOutputA,
        sum(POL_RW_OUTPUT_FA) as polRwOutputFA,
        sum(IOB_INPUT) as iobInput,
        sum(IOB_EI_OUTPUT_A) as iobEiOutputA,
        sum(IOB_EI_OUTPUT_FA) as iobEiOutputFA,
        sum(IOB_EI_OUTPUT_B_RW_A) as iobEiOutputBRwA,
        sum(IOB_EI_OUTPUT_B_RW_FA) as iobEiOutputBRwFA,
        sum(IOB_EI_OUTPUT_D_RW_A) as iobEiOutputDRwA,
        sum(IOB_EI_OUTPUT_D_RW_FA) as iobEiOutputDRwFA
        FROM
        DWS_PRODUCT_OC_YIELD_FIDS
        WHERE
        PRODUCTID IN ('C41A', 'D41A','A1CC495PU1L01','D0NL495PU1L01', 'C51A','D51A','A1CC575PU1L01','A1CC575PU3L01')
        and PRODUCTTYPE IN
        <foreach collection="productTypeList" item="productType" open="(" separator="," close=")">
            #{productType}
        </foreach>
        <![CDATA[
          and PERIODDATE >= #{startDate}
          and PERIODDATE <= #{endDate}
        ]]>
        GROUP BY decode(PRODUCTID,'C41A','50', 'D41A','50','A1CC495PU1L01','50','D0NL495PU1L01','50',
        'C51A','58','D51A','58','A1CC575PU1L01','58','A1CC575PU3L01','58',PRODUCTID)
    </select>
</mapper>