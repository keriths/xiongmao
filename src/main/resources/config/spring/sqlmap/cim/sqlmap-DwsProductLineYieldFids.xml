<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xm.service.dao.cim.DwsProductLineYieldFidsDAO" >

    <select id="queryProductLineData" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductLineData$ProductLineDetailData" parameterType="Map">
        select
            decode(FACTORY,'SL','SL-OC','OC','SL-OC',FACTORY) as factory,
            sum(OUTPUT_GLS_QTY) as outputGls,
            sum(SCRAP_GLS_QTY) as scrapGls,
            sum(INPUT_PNL_QTY) as inputPnl,
            sum(OUTPUT_PNL_QTY) as outputPnl,
            <if test="dateType=='month'.toString()">/*按月*/
                TO_CHAR(PERIODDATE,'MM')||'月'
            </if>
            <if test="dateType=='quarter'.toString()">/*按季度*/
                TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度'
            </if>
            <if test="dateType=='day'.toString()">/*按天*/
                TO_CHAR(PERIODDATE,'mm/dd')
            </if>
            as periodDate
        from DWS_PRODUCT_LINE_YIELD_FIDS
        WHERE
            <![CDATA[
                PERIODDATE >= #{beginDate}
                and PERIODDATE <= #{endDate}
            ]]>
            AND FACTORY IN
            <foreach collection="factoryList" item="factory" open="(" separator="," close=")">
                #{factory}
            </foreach>
            and PRODUCTTYPE IN
            <foreach collection="productTypeList" item="productType" open="(" separator="," close=")">
                #{productType}
            </foreach>
        GROUP BY
            <if test="dateType=='month'.toString()">/*按月*/
                TO_CHAR(PERIODDATE,'MM')||'月',
            </if>
            <if test="dateType=='quarter'.toString()">
                TO_CHAR(PERIODDATE,'yyyy') ||'年' || TO_CHAR(PERIODDATE,'q') ||'季度',
            </if>
            <if test="dateType=='day'.toString()">
                TO_CHAR(PERIODDATE,'mm/dd'),
            </if>
            decode(FACTORY,'SL','SL-OC','OC','SL-OC',FACTORY)
    </select>

    <select id="loadByPrimaryKey" parameterType="map" resultType="map">
        SELECT * from DWS_PRODUCT_LINE_YIELD_FIDS
        where
        FACTORY = #{FACTORY} and
        PERIODDATE = #{PERIODDATE} and
        PRODUCTID = #{PRODUCTID} and
        PRODUCTTYPE = #{PRODUCTTYPE}
    </select>
    <insert id="addData" parameterType="map">
        INSERT INTO  DWS_PRODUCT_LINE_YIELD_FIDS
        (FACTORY,   PERIODDATE,   PRODUCTID,   OUTPUT_GLS_QTY,   SCRAP_GLS_QTY,   INPUT_PNL_QTY,   OUTPUT_PNL_QTY,   INTERFACE_TIME,   PRODUCTTYPE) VALUES
        (#{FACTORY},#{PERIODDATE},#{PRODUCTID},#{OUTPUT_GLS_QTY},#{SCRAP_GLS_QTY},#{INPUT_PNL_QTY},#{OUTPUT_PNL_QTY},sysdate,#{PRODUCTTYPE})
    </insert>
    <update id="updateData" parameterType="map">
        UPDATE DWS_PRODUCT_LINE_YIELD_FIDS SET
        OUTPUT_GLS_QTY = #{OUTPUT_GLS_QTY} ,
        SCRAP_GLS_QTY = #{SCRAP_GLS_QTY} ,
        INPUT_PNL_QTY = #{INPUT_PNL_QTY},
        OUTPUT_PNL_QTY = #{OUTPUT_PNL_QTY} ,
        INTERFACE_TIME = sysdate
        WHERE
        FACTORY = #{FACTORY} and
        PERIODDATE = #{PERIODDATE} and
        PRODUCTID = #{PRODUCTID} AND
        PRODUCTTYPE = #{PRODUCTTYPE}
    </update>

    <update id="updateTargetData" parameterType="map">
        UPDATE DWS_PRODUCT_LINE_YIELD_FIDS SET
        (DWS_PRODUCT_LINE_YIELD_FIDS.TARGETINLINE)=
        (select TARGETINLINE
        from TARGET
        where
        TARGET.FACTORY=DWS_PRODUCT_LINE_YIELD_FIDS.FACTORY
    </update>

    <select id="queryTotalProductLineByDateAndFactoryList" parameterType="map" resultType="com.xm.service.apiimpl.pc.cim.goodRate.dto.ProductLineData$ProductLineDetailData">
        SELECT
        decode(FACTORY,'SL','SL-OC','OC','SL-OC',FACTORY) as factory,
        sum(OUTPUT_GLS_QTY) as outputGls,
        sum(SCRAP_GLS_QTY) as scrapGls,
        sum(INPUT_PNL_QTY) as inputPnl,
        sum(OUTPUT_PNL_QTY) as outputPnl
        FROM
        DWS_PRODUCT_LINE_YIELD_FIDS
        WHERE
        FACTORY IN
        <foreach collection="factoryList" item="factory" open="(" separator="," close=")" >
            #{factory}
        </foreach>
        and PRODUCTTYPE IN
        <foreach collection="productTypeList" item="productType" open="(" separator="," close=")">
            #{productType}
        </foreach>
        <![CDATA[
          and PERIODDATE >= #{startDate}
          and PERIODDATE <= #{endDate}
        ]]>
        GROUP BY decode(FACTORY,'SL','SL-OC','OC','SL-OC',FACTORY)
    </select>
</mapper>